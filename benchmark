#!/usr/bin/env python3
import sys, os
import argparse
import yaml

DATA='/Users/jerry/work/tiobe/test_env/dataset'
UTILS='/Users/jerry/work/git/leaderboard/utils'

parser = argparse.ArgumentParser()
parser.add_argument('submission_key', type=str)
args = parser.parse_args()

submission_key = args.submission_key
submission_dir = os.path.join('submissions', submission_key)

# STEP: submission check 
info_file = os.path.join(submission_dir, 'info.yml')
docker_file = os.path.join(submission_dir, 'Dockerfile')
required_files = [info_file, docker_file]

for f in required_files:
  if not os.path.isfile(f):
    print(F'ERR: can not find {f}')
    sys.exit(0)

with open(info_file, 'r') as f:
  info = yaml.safe_load(f)
  if info['key'] != submission_key:
    print('ERR: submission key inconsistent.', file=sys.stderr)
    sys.exit(0)

print(F'{info_file} == {info}', file=sys.stderr)

# STEP: build docker image
image = F'speechio/leaderboard:{submission_key}'
cmd = F'docker build -f {docker_file} -t {image} {submission_dir}'
print(cmd, file=sys.stderr)
os.system(cmd)

# STEP: download model from leaderboard hub
work_dir = os.path.abspath(os.path.join('workspace', submission_key))
cmd = F"ossutil cp -r {info['url'].rstrip('/')} {work_dir}"
print(cmd)
#os.system(cmd)

# 
with open(os.path.join(work_dir, 'test_sets'), 'w+') as f:
  for x in info['test_sets']:
    print(x, file=f)
with open(os.path.join(work_dir, 'submission_key'), 'w+') as f:
  print(info['key'], file=f)

# instantiate a benchmark container
opts_mount_data = F'-v {DATA}:/app/speechio/leaderboard/data:ro'
opts_mount_util = F'-v {UTILS}:/app/speechio/leaderboard/utils'
opts_mount_work_dir = F'-v {work_dir}:/app/speechio/leaderboard/test_env'
cmd = F'docker run {opts_mount_data} {opts_mount_util} {opts_mount_work_dir} {image} /app/speechio/leaderboard/utils/benchmark.sh'
print(cmd, file=sys.stderr)
os.system(cmd)
