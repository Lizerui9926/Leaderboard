#!/usr/bin/env python3
import sys, os
import argparse

REMOTE_URI = 'oss://speechio-leaderboard/'

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('resource_type', choices=['model', 'dataset'])
    parser.add_argument('resource_id', type=str, help='submission model/dataset id')
    args = parser.parse_args()
    print(args, file=sys.stderr)

    remote_model_zoo = os.path.join(REMOTE_URI, 'models')
    model_zoo = 'models'

    remote_dataset_zoo = os.path.join(REMOTE_URI, 'datasets')
    dataset_zoo = 'datasets'

    assert os.path.isfile('oss'), "Cannot find oss, please run utils/install_oss.sh"
    if not os.path.isfile('SAFEBOX/oss.cfg'):
        instructions_to_get_credential = (
            'You need credential to use the leaderboard:\n  '
            'Please send email with title "oss.cfg" to leaderboard@speechio.ai, '
            'and paste replied content to SAFEBOX/oss.cfg'
        )
        print(instructions_to_get_credential, file=sys.stderr)
        sys.exit(-1)

    if args.resource_type == 'model':
        model_id = args.resource_id
        dir = os.path.join(model_zoo, model_id)

        requirements = [ os.path.join(dir, x) for x in ['model.yaml', 'SBI', 'docker/Dockerfile'] ]
        for r in requirements:
            assert(os.path.isfile(r))
        
        src = dir
        dst = os.path.join(remote_model_zoo, model_id) + '/'

    elif args.resource_type == 'dataset':
        dataset_id = args.resource_id
        dir = os.path.join(dataset_zoo, dataset_id)

        assert(os.path.isdir(os.path.join(dir, 'audio')))
        assert(os.path.isfile(os.path.join(dir, 'info.json')))

        src = dir
        dst = os.path.join(remote_dataset_zoo, dataset_id) + '/'

    else:
        raise NotImplementedError

    cmd = F'./oss -c SAFEBOX/oss.cfg cp -ur {src} {dst}'
    print(cmd, file=sys.stderr)
    os.system(cmd)
